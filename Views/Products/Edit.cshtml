@model FamsEcommerce.Context.Product

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Add your custom CSS styles here */
        .center-content {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .custom-form {
            width: 400px;
            padding: 20px;
            background-color: #f7f7f7;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="center-content">
        <div class="custom-form">
            @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.P_Id)

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Description, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.P_Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.P_Description, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Price, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.P_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.P_Price, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Quantity, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.P_Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.P_Quantity, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Disc_Price, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.P_Disc_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.P_Disc_Price, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Catagory, "P_Catagory", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("P_Catagory", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.P_Catagory, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.P_Image, htmlAttributes: new { @class = "form-label" })
                    <input type="file" name="ImageFile" required class="form-control" value="@Model.P_Image" />
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }

            <div class="text-center mt-3">
                @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
